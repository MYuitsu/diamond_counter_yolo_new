# C·∫•u h√¨nh t·ªëi ∆∞u cho ƒë·∫øm kim c∆∞∆°ng 1mm
import torch

# T·ª± ƒë·ªông detect device v√† c·∫•u h√¨nh t∆∞∆°ng ·ª©ng
_device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
_use_half = str(_device) == 'cuda'  # Ch·ªâ d√πng FP16 n·∫øu c√≥ GPU
_is_cpu = str(_device) == 'cpu'

# C·∫•u h√¨nh t·ªëi ∆∞u cho RTX 2060 (6GB VRAM)
if _is_cpu:
    # CPU: Gi·∫£m c√°c tham s·ªë ƒë·ªÉ tƒÉng t·ªëc
    YOLO_CONFIG = {
        "conf": 0.1,           # Confidence cao h∆°n ƒë·ªÉ gi·∫£m t√≠nh to√°n
        "max_det": 5000,       # Gi·∫£m max detection cho CPU
        "augment": False,      # T·∫Øt augmentation ƒë·ªÉ tƒÉng t·ªëc
        "agnostic_nms": False, 
        "imgsz": 1024,         # Gi·∫£m k√≠ch th∆∞·ªõc ·∫£nh cho CPU
        "half": False,         # CPU kh√¥ng h·ªó tr·ª£ FP16
        "verbose": False
    }
    print("üñ•Ô∏è C·∫•u h√¨nh CPU: T·ªëi ∆∞u t·ªëc ƒë·ªô")
else:
    # GPU RTX 2060: C·∫•u h√¨nh cho ƒë·ªô ch√≠nh x√°c t·ªëi ƒëa
    YOLO_CONFIG = {
        "conf": 0.01,          # Confidence r·∫•t th·∫•p ƒë·ªÉ catch kim c∆∞∆°ng 1mm
        "iou": 0.3,            # IoU th·∫•p ƒë·ªÉ ph√¢n bi·ªát kim c∆∞∆°ng g·∫ßn nhau
        "max_det": 50000,      # T·ªëi ƒëa detection cho RTX 2060
        "augment": False,      # T·∫ÆT augmentation - YOLOv8-seg kh√¥ng h·ªó tr·ª£
        "agnostic_nms": False, 
        "imgsz": 1280,         # K√≠ch th∆∞·ªõc t·ªëi ∆∞u cho RTX 2060
        "half": True,          # FP16 cho RTX 2060
        "verbose": False,
        "retina_masks": True,  # High-quality masks
        "save": False,         # Kh√¥ng save ƒë·ªÉ ti·∫øt ki·ªám memory
        "show": False
    }
    print("üöÄ C·∫•u h√¨nh RTX 2060: T·ªëi ∆∞u ƒë·ªô ch√≠nh x√°c (T·∫ÆT augment - kh√¥ng h·ªó tr·ª£)")

# C·∫•u h√¨nh cho morphological operations - t·ªëi ∆∞u RTX 2060
MORPH_CONFIG = {
    "clean_kernel_size": (2, 2),    # Kernel nh·ªè cho kim c∆∞∆°ng 1mm
    "erode_kernel_size": (2, 2),    # Kernel erode nh·ªè
    "erode_iterations": 1,          # √çt iteration ƒë·ªÉ kh√¥ng m·∫•t object nh·ªè
    "dilate_iterations": 2,         # √çt dilation
    "distance_threshold": 0.1       # Threshold th·∫•p h∆°n cho distance transform
}

# C·∫•u h√¨nh cho l·ªçc object - t·ªëi ∆∞u cho kim c∆∞∆°ng 1mm
FILTER_CONFIG = {
    "min_area_pixels": 6,              # Gi·∫£m t·ª´ 10 ƒë·ªÉ catch kim c∆∞∆°ng 1mm
    "max_aspect_ratio": 2.5,           # Gi·∫£m t·ª´ 3.0 ƒë·ªÉ strict h∆°n
    "iou_threshold": 0.25,             # Gi·∫£m t·ª´ 0.3 ƒë·ªÉ ph√¢n bi·ªát kim c∆∞∆°ng g·∫ßn nhau
    "min_size_mm": 0.7,                # Gi·∫£m t·ª´ 0.8mm ƒë·ªÉ catch kim c∆∞∆°ng 1mm
    "circularity_threshold": 0.3,      # Minimum circularity
    "confidence_threshold": 0.2        # Minimum confidence score
}

# C·∫•u h√¨nh cho image enhancement - t·ªëi ∆∞u cho RTX 2060
ENHANCEMENT_CONFIG = {
    "clahe_clip_limit": 3.0,           # TƒÉng t·ª´ 2.0 cho contrast m·∫°nh h∆°n
    "clahe_tile_size": (4, 4),         # Gi·∫£m t·ª´ (8,8) cho detail t·ªët h∆°n
    "gaussian_kernel": (3, 3),         
    "gaussian_sigma": 0.3,             # Gi·∫£m t·ª´ 0.5 ƒë·ªÉ b·∫£o to√†n detail
    "sharpen_strength": 0.3            # Th√™m sharpening
}
